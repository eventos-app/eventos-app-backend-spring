#########################################
# CONFIGURACIÓN GENERAL
#########################################

# Escuchar en todas las interfaces de red (solo si Redis está en una red segura)
bind 0.0.0.0

# Puerto de escucha
port 6379

# Protección contra acceso remoto (activar si Redis está expuesto a internet)
protected-mode no

# Requerir autenticación (debe coincidir con REDIS_PASSWORD en docker-compose)
# requirepass strongpassword

#########################################
# PERSISTENCIA (RDB & AOF)
#########################################

# Guardar snapshots en disco (RDB) cada X tiempo si hubo al menos Y escrituras
# Cada 15 min si hubo al menos 1 cambio
save 900 1
# Cada 5 min si hubo al menos 10 cambios
save 300 10
# Cada 1 min si hubo al menos 100 cambios
save 60 100

# Modo Append-Only File (AOF) para persistencia adicional
appendonly yes
# Guardar cambios en disco cada segundo
appendfsync everysec

#########################################
# MANEJO DE MEMORIA
#########################################

# Definir un límite de memoria para evitar que Redis consuma demasiados recursos
maxmemory 256mb 

# Política de eliminación cuando se alcanza el límite de memoria
# Volátil significa que primero eliminará claves con TTL (Time-to-Live)
maxmemory-policy allkeys-lru 

#########################################
# OPTIMIZACIÓN DE RENDIMIENTO
#########################################

# Desactivar logging de latencia para mejorar rendimiento
latency-monitor-threshold 0

# Número de hilos de trabajo para mejorar rendimiento en sistemas multi-core
io-threads 4

# Tamaño de caché de cliente (para evitar que un solo cliente acapare los recursos)
client-output-buffer-limit normal 256mb 64mb 60

#########################################
# CLÚSTER Y ALTA DISPONIBILIDAD
#########################################

# Habilitar modo clúster si es necesario para alta disponibilidad
# cluster-enabled yes

# Número de réplicas recomendadas si se usa con cluster
# replicaof 192.168.1.100 6379